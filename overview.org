# -*- mode: org -*-

#+OPTIONS: toc:nil
#+PROPERTY: mkdirp yes
#+STARTUP: content

* Order Form

| Description                                                      | Yes / No |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide health monitoring endpoint(s) (probes) |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide buyers with a list of shipping options |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide buyers with the current cost data      |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide buyers with the current stock level    |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] allow buyers to place orders                   |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide shipping information for orders        |          |
|------------------------------------------------------------------+----------|
| Will seller [xxx] provide invoices for orders                    |          |
|------------------------------------------------------------------+----------|

* Actors

Within the ECi Order Placement system a dealer typically takes on the role of /buyer/. A vendor or
supplier (typical readers of this document) assume the role of /seller/.

#+BEGIN_SRC plantuml :file ./images/buyer-usecases.puml.png :exports results
@startuml sequence-buyer2seller.png
buyer -> (Place Order)
buyer -> (Get Cost)
buyer -> (Get Stocking Level)
buyer -> (Get Shipping Methods)
@enduml
#+END_SRC

#+BEGIN_SRC plantuml :file ./images/seller-usecases.puml.png :exports results
@startuml sequence-buyer2seller.png
seller -> (Invoice Shipment)
seller -> (Announce Shipment)
seller -> (Accept Order)
seller -> (Reject Order)
@enduml
#+END_SRC

# #+BEGIN_SRC plantuml :file ./images/consumer-usecases.puml.png :exports results
# @startuml sequence-buyer2seller.png
# Consumer -> (TODO)
# @enduml
# #+END_SRC

* Endpoints

There are six endpoints, three provided by the seller's system and three provided by the buyer's
system. Not all seller systems support resources or endpoints for Shipping Methods, Order\Delta
(accept/reject), or Shipping Receipts.

#+BEGIN_SRC plantuml :file ./images/endpoints.puml.png :exports results
@startuml sequence-buyer2seller.png
buyer -> seller: [ POST ] stock
buyer -> seller: [ GET ] shipping methods
buyer -> seller: [ POST ] order
seller -> buyer: order<U+0394> | error [ POST ]
seller -> buyer: shipping receipt [ POST ]
seller -> buyer: invoice [ POST ]
@enduml
#+END_SRC

** Seller provided endpoints

Buyer to seller interactions often start off by asking the seller if the items they are interested in
purchasing are available in sufficient quantity and at an acceptable cost. The buyer's final act will
to post an order to the seller's system.

#+BEGIN_SRC plantuml :file ./images/endpoints-buyer2seller.puml.png :exports results
@startuml sequence-buyer2seller.png
buyer -> seller: [ POST ] stock
buyer -> seller: [ GET ] shipping methods
buyer -> seller: [ POST ] order
@enduml
#+END_SRC

** Buyer provided endpoints

Seller to buyer interactions may start with some type of document accepting the order as is, making
changes to the order, or rejecting the order. For orders that are accepted the seller will let the
buyer know when the order has been shipped along with delivery tracking information and an invoice.

#+BEGIN_SRC plantuml :file ./images/endpoints-seller2buyer.puml.png :exports results
@startuml sequence-seller2buyer.png
seller -> buyer: [ POST ] order<U+0394> | error
seller -> buyer: [ POST ] shipping receipt
seller -> buyer: [ POST ] invoice
@enduml
#+END_SRC

* Resource Types

We have chosen to represent resources using JSON Schema and prefer seller implementations also choose
a JSON representation. The buyer's system will be programmed to send and receive resources in other
representations, though this is not part of the standard agreement and will need to be addressed
separately.

These resource types are intended to represent data in flight and are not meant to represent data at rest.

There are seven resource types exchanged between the buyer's system and the seller's system:

- stock :: buyer requests cost and/or availability of one or more items
- (stock&Delta;) :: seller modifies the received stock resource
- shipping-method :: seller may provide the buyer with a selection of shipping options to choose from
- order :: buyer provides a list of one or more items, the quantity of each item, to be purchased
- order&Delta; :: seller may modify the order to indicate back orders, cost, etc.
- shipping receipt :: seller provides the buyer with delivery and tracking information for each shipment
- invoice :: seller provides the buyer a list of items purchased, the quantity purchased, and cost information
- error :: buyer and seller systems may respond with error information

#+BEGIN_SRC dot cmdline: -Kdot -Tpng :file ./images/resource-types.dot.png
    digraph {
      stockD [ label="stock&Delta;" ]
      orderD [ label="order&Delta;" ]
      shippingMethod [label="shippping method"]
      shippingReceipt [label="shippping receipt"]

      stock -> error;
      stock -> stockD;
      stockD -> order;
      shippingMethod -> order;
      order -> error;
      order -> orderD;
      orderD -> shippingReceipt;
      orderD -> invoice;
    }
#+END_SRC

* Connecting

** HTTPS / TLS

The ECi Order Placement services will always connect using a minimum of TLS 1.2.

** Authentication

*** Buyer -> Seller

The seller is responsible for providing participating dealers (buyers) a user name
and password which the ECi system will use to connect to the seller's system. This
information will be passed to the seller via HTTP Basic Authentication [[http://www.rfc-editor.org/info/rfc7617][RFC 7617]].
Stock and Order resources allow for additional non-schema defined information
(opaque) to be supplied by the buyer and delivered to the seller.

*** Seller -> Buyer

ECi is responsible for assigning and maintaining an ID and an API key to each of
the seller systems. This information will be passed to the buyer system via HTTP
Basic Authentication. Stock and Order resources allow for additional non-schema
defined information (opaque) to be supplied by the seller and delivered to the buyer.
